generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PLAYER
  CREATOR
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String?
  googleId         String?   @unique
  githubId         String?   @unique
  steamId          String?   @unique
  discordId        String?   @unique
  
  totpSecret       String?
  isTotpEnabled    Boolean   @default(false)

  role             Role      @default(PLAYER)
  profile          Profile?  @relation(fields: [profileId], references: [id])
  profileId        Int?      @unique

  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  news            News[]

  Creator         Creator[]

  
  followedCreators Follow_creator[] @relation("FollowedCreators")
  followers        Follow_creator[] @relation("CreatorFollowers")
}

model Profile {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  avatarUrl     String?
  bio           String?
  socialLinks   Json?
  isAnonymized  Boolean  @default(false)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User?
}

model Creator {
  ID_creator Int
  ID_project Int  @unique

  user    User    @relation(fields: [ID_creator], references: [id])
  project Project @relation("ProjectCreator", fields: [ID_project], references: [id])

  @@id([ID_creator, ID_project])
}

model Follow_creator {
   @@id([ID_user, ID_creator])

  ID_user                Int
  ID_creator             Int
  createdAt              DateTime @default(now())
  notificationsEnabled   Boolean  @default(false)

  follower               User     @relation("FollowedCreators", fields: [ID_user], references: [id])
  followedCreator        User     @relation("CreatorFollowers", fields: [ID_creator], references: [id])
}

enum ProjectStatus {
  in_progress
  published
  canceled
}

model Project {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  status      ProjectStatus    @default(in_progress)

  creator     Creator?         @relation("ProjectCreator")

  news        News[]
}


model News {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])

  Project Project[]
}